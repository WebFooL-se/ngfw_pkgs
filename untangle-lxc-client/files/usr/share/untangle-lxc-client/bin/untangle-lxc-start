#!/bin/bash

set -o errtrace # so trap ERR is inherited in functions, subshells, etc

NAME="client"
LOG_FILE="/var/log/uvm/lxc-${NAME}.log"
ARCH="$(dpkg-architecture -qDEB_BUILD_ARCH)"

PACKAGES="iputils-ping,dnsutils,curl,wget,ssh,nmap,mime-construct,python,netcat-openbsd,iperf,snmp,miniupnpc,ntp,nano,traceroute,telnet"
ATS_SCRIPT="setup_testshell.sh"
ATS_SCRIPT_URL="https://test.untangle.com/test/${ATS_SCRIPT}"

if [ "$EUID" != 0 ] ; then
    echo "sudo $0 $*"
    exec sudo -E $0 $*
fi

runInLxc() {
  lxc-attach -n ${NAME} -- "$@"
}

exec &> >(tee -a "$LOG_FILE")

trap 'echo !!! Last command failed, aborting ; exit 1' ERR

# Bring up bridge
if ! ifquery --state br.lxc | grep -q 'br.lxc' ; then
   ifup br.lxc
fi

# Create LXC instance (if it doesn't exist)
if ! lxc-info -n $NAME > /dev/null 2>&1 ; then
  echo "Creating LXC ${NAME}..."
  lxc-create -n $NAME -t debian -- --release=stretch --arch=$ARCH --packages=$PACKAGES
  echo "LXC ${NAME} is ready"

  # Configure LXC instance
  echo "Setting DNS for LXC ${NAME} to 192.0.2.1"
  echo nameserver 192.0.2.1 >| /var/lib/lxc/${NAME}/rootfs/etc/resolv.conf
  echo "Setting SSH configuration (using /etc/ssh/sshd_config) in LXC ${NAME}"
  cp /etc/ssh/sshd_config /var/lib/lxc/${NAME}/rootfs/etc/ssh/sshd_config
fi

if ! lxc-info -n ${NAME} | egrep -q 'State:.*RUNNING' ; then
    echo "Starting LXC ${NAME}..."
    lxc-start -d -n ${NAME}
    lxc-wait -n ${NAME} -s RUNNING
else
    echo "LXC ${NAME} already running."
fi

if ! runInLxc grep -q testshell /etc/passwd ; then
    echo "Setting up test shell in LXC ${NAME}..."
    runInLxc bash -c "curl -s -k -o /root/${ATS_SCRIPT} ${ATS_SCRIPT_URL} && echo y | bash /root/${ATS_SCRIPT}"
    echo "Setting up test shell in LXC ${NAME}...done"
fi

if ! runInLxc pgrep sshd > /dev/null ; then
    echo "Starting sshd in LXC ${NAME}..."
    runInLxc systemctl start sshd
    echo "Starting sshd in LXC ${NAME}...done"
fi

echo "Attach to LXC ${NAME} via \"lxc-attach -n $NAME\""
