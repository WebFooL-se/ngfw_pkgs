#! /bin/bash

set -e -x

usage() {
  echo "$0 -f <image-file> -k <kernel> -i <initrd> -b <external-bridge> -c <internal-bridge> -n [-u] [-m <memory>] [-p <port>] -t (g|graphic|t|terminal)]"
  exit 1
}

if [ $(id -u) != 0 ] ; then
  exec sudo -E $0 $*
fi

#############
## Constants
#############
MODE="-monitor stdio" # default mode
# FIXME: use a dynamic port
#QEMU_SOCKET="localhost:12345"
QEMU_BRIDGE_ACL="/etc/qemu/bridge.conf"

#############
## CLI args
#############
while getopts uf:k:i:m:b:c:t:p: option ; do
  case "$option" in
#    p) QEMU_SOCKET="localhost:$OPTARG" ;;
    k) KERNEL_OPTIONS="-kernel $OPTARG" ;;
    i) INITRD_OPTION="-initrd $OPTARG" ;;
    f) IMAGE="$OPTARG" ;;
    m) MEMORY="$OPTARG" ;;
    b) BRIDGE="$OPTARG" ;;
    c) BRIDGE_INT="$OPTARG" ;;
    u) UVM=1 ;;
    t) case $OPTARG in
	 g|graphic) MODE="-monitor stdio" n;;
	 t|terminal) MODE="-nographic" ;;
	 *) usage ;;
       esac ;;
    h|\?) usage ;;
  esac
done

#########
## main
#########

##################
# check CLI args
{ [[ -z "$IMAGE" ]] || [[ -z "$BRIDGE" ]] ; } && usage

if [[ -n "$UVM" ]] ; then
  # require additional parameters
  { [[ -z "$KERNEL_OPTIONS" ]] || [[ -z "$INITRD_OPTION" ]] || [[ -z "$BRIDGE_INT" ]] ; } && usage
  # default RAM to 2G
  [[ -z "$MEMORY" ]] && MEMORY="2G"
else
  [[ -z "$MEMORY" ]] && MEMORY="1G"
fi

if [[ -n "$UVM" ]] ; then

  # Create the internal bridge if necessary
  if ! ip link ls ${BRIDGE_INT} > /dev/null 2>&1 ; then
    ip link add $BRIDGE_INT type bridge
    ip link set dev $BRIDGE_INT up
  fi

  # pass extra kernel parameters
  APPEND_OPTIONS=(-append "root=/dev/vda1 net.ifnames=0 console=tty0 console=ttyS0,115200")

  NETWORK_OPTIONS="-netdev bridge,id=external0,br=$BRIDGE \
    -device virtio-net-pci,netdev=external0 \
    -netdev bridge,id=internal0,br=$BRIDGE_INT \
    -device virtio-net-pci,netdev=internal0"

# Socket is faster and simpler, but is bugged in the stretch version of qemu
#    -netdev socket,id=internal0,listen=$QEMU_SOCKET \
#    -device virtio-net-pci,netdev=internal0"
else
  NETWORK_OPTIONS="-netdev bridge,id=internal0,br=$BRIDGE \
    -device virtio-net-pci,netdev=internal0"

# Socket is faster and simpler, but is bugged in the stretch version of qemu
#  NETWORK_OPTIONS="-netdev socket,id=internal0,connect=$QEMU_SOCKET \
#    -device virtio-net-pci,netdev=internal0"
fi

########################
# load required modules
modprobe virtio-blk
modprobe virtio-pci

########################
# start the VM
kvm -enable-kvm \
    -m $MEMORY $MODE $KERNEL_OPTIONS "${APPEND_OPTIONS[@]}" $INITRD_OPTION \
    -drive if=none,format=raw,id=hd0,file=$IMAGE \
    -device driver=virtio-blk-pci,id=drive0,drive=hd0 \
    $NETWORK_OPTIONS
